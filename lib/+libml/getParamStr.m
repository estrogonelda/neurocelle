function output = getParamStr(varargin)

% GETPARAMSTR Summary of this function goes here
%   Detailed explanation goes here


    % Create general data structure.
    general = struct(...
        'model_type','',...
        'model_sub_type','',...
        'model_fcn','',...
        'design_type','',...
        'design_fcn','',...
        'performance_crit','',...
        'ordenation_crit','',...
        'selection_crit','',...
        'force_iterations','',...
        'num_iterations','',...
        'num_saves','');
    
    % Create default model type and data structure.
    model = 'ann';
    modelStr = struct([]);
    
    % Create default design type and data structure.
    design = 'random';
    designStr = struct([]);
    
    % Default output.
    output = struct(...
        'general',general,...
        'model_specific',modelStr,...
        'design_specific',designStr);
    
    
    % Argument verification.
    if nargin == 0
        return;
    elseif nargin == 1 && ischar(varargin{1})
        model = varargin{1};
    elseif nargin == 2 && ischar(varargin{1}) && ischar(varargin{2})
        model = varargin{1};
        design = varargin{2};
    else
        %output = [];
        %return;
    end
    
    % Create 'params' structure for an specific model type.
    switch model
        case 'ann'
            modelStr = struct(...
                'ann_type','',...
                ...% Deterministic params.
                'num_hidden_layers','',...
                'num_neurons_layers','',...
                'trainFcn','',...
                'transferFcn_layers','',...
                'extra_deterministic_param','',...
                ...% Stochastic params.
                'divide_crit','',...
                'raffling_weights_crit','',...
                'raffling_bias_crit','',...
                'num_mc_vals','',...
                'num_lr_vals','',...
                'extra_stochastic_param','',...
                ...% Design params.
                'design_vct','',...
                'design_mask','',...
                'design_archs','',...
                'num_design_archs','',...
                'num_archs_units','',...
                'num_units_replicates','',...
                'num_total','');
        otherwise
            modelStr = struct([]);
    end
    
    switch design
        case 'genetic'
            designStr = struct(...
                'population_size','',...
                'survive_ratio','',...
                'mutation_rate','',...
                'genes','',...
                'imigration','',...
                'num_generations','');
        otherwise
            designStr = struct([]);
    end
    
    % Default output.
    output = struct(...
        'general',general,...
        'model_specific',modelStr,...
        'design_specific',designStr);
end
